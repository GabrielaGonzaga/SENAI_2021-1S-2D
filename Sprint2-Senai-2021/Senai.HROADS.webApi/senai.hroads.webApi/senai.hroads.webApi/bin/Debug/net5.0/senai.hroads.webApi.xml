<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai.hroads.webApi</name>
    </assembly>
    <members>
        <member name="P:senai.hroads.webApi.Controllers.ClassesController._classeRepository">
            <summary>
            Objeto _classeRepository que irá receber todos os métodos definidos na interface IClasseRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.#ctor">
            <summary>
            Instancia o objeto _classeRepository para que haja a referência nos métodos implementas no repositório ClasseRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.Get">
            <summary>
            Lista todas as clases
            </summary>
            <returns>Uma lista de classs e um status code 200 - Ok</returns>
            
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.Put(System.Int32,senai.hroads.webApi.Domains.Class)">
            <summary>
            Atualiza uma classe existente
            </summary>
            <param name="id">ID da classe que será atualizado</param>
            <param name="classeAtualizada">Objeto classeAtualizada com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.GetById(System.Int32)">
            <summary>
            Busca uma classe através do seu ID
            </summary>
            <param name="id">ID da classe que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
            http://localhost:5000/api/estudios/1
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.Post(senai.hroads.webApi.Domains.Class)">
            <summary>
            Cadastra uma nova classe
            </summary>
            <param name="novaClasse">Objeto novaClasse que será cadastrada</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.ClassesController.Delete(System.Int32)">
            <summary>
            Deleta uma classe existente
            </summary>
            <param name="id">ID da classe que será deletada</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="P:senai.hroads.webApi.Controllers.HabilidadesController._habilidadeRepository">
            <summary>
            Objeto _habilidadeRepository que irá receber todos os métodos definidos na interface IHabilidadeRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.#ctor">
            <summary>
            Instancia o objeto _habilidadeRepository para que haja a referência nos métodos implementas no repositório HabilidadeRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.Get">
            <summary>
            Lista todas as clases
            </summary>
            <returns>Uma lista de classs e um status code 200 - Ok</returns>
            
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.Put(System.Int32,senai.hroads.webApi.Domains.Habilidade)">
            <summary>
            Atualiza uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será atualizado</param>
            <param name="habilidadeAtualizada">Objeto habilidadeAtualizada com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.GetById(System.Int32)">
            <summary>
            Busca uma habilidade através do seu ID
            </summary>
            <param name="id">ID da habilidade que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
            http://localhost:5000/api/estudios/1
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.Post(senai.hroads.webApi.Domains.Habilidade)">
            <summary>
            Cadastra uma nova habilidade
            </summary>
            <param name="novaHabilidade">Objeto novaHabilidade que será cadastrada</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.Delete(System.Int32)">
            <summary>
            Deleta uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será deletada</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.HabilidadesController.GetTipos">
            <summary>
            Lista todas as habilidades com seus respectivos tipos
            </summary>
            <returns>Uma lista de classs e um status code 200 - Ok</returns>
            
        </member>
        <member name="P:senai.hroads.webApi.Controllers.LoginsController._usuarioRepository">
            <summary>
            Objeto _usuarioRepository que irá receber todos os métodos definidos na interface IUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.LoginsController.#ctor">
            <summary>
            Instancia o objeto _usuarioRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="P:senai.hroads.webApi.Controllers.PersonagensController._personagemRepository">
            <summary>
            Objeto _personagemRepository que irá receber todos os métodos definidos na interface IPersonagemRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.#ctor">
            <summary>
            Instancia o objeto _personagemRepository para que haja a referência nos métodos implementas no repositório PersonagemRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.Get">
            <summary>
            Lista todos os personagens
            </summary>
            <returns>Uma lista de personagens e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.Put(System.Int32,senai.hroads.webApi.Domains.Personagen)">
            <summary>
            Atualiza um personagem existente
            </summary>
            <param name="id">ID do personagem que será atualizado</param>
            <param name="personagemAtualizado">Objeto personagemAtualizado com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.GetById(System.Int32)">
            <summary>
            Busca um personagem através do seu ID
            </summary>
            <param name="id">ID do personagem que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
            http://localhost:5000/api/estudios/1
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.Post(senai.hroads.webApi.Domains.Personagen)">
            <summary>
            Cadastra um novo personagem
            </summary>
            <param name="novoPersonagem">Objeto novoPersonagem que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.PersonagensController.Delete(System.Int32)">
            <summary>
            Deleta um personagem existente
            </summary>
            <param name="id">ID do personagem que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="P:senai.hroads.webApi.Controllers.TiposDeUsuariosController._tipoDeUsuarioRepository">
            <summary>
            Objeto _tipoDeUsuarioRepository que irá receber todos os métodos definidos na interface ITipoDeUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.#ctor">
            <summary>
            Instancia o objeto _tipoDeUsuarioRepository para que haja a referência nos métodos implementas no repositório TipoDeUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.Get">
            <summary>
            Lista todos os tiposDeUsuarios
            </summary>
            <returns>Uma lista de tiposDeUsuarios e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.Put(System.Int32,senai.hroads.webApi.Domains.TiposDeUsuario)">
            <summary>
            Atualiza um tipoDeUsuario existente
            </summary>
            <param name="id">ID do tipoDeUsuario que será atualizado</param>
            <param name="tipoDeUsuarioAtualizado">Objeto tipoDeUsuarioAtualizado com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.GetById(System.Int32)">
            <summary>
            Busca um tipoDeUsuario através do seu ID
            </summary>
            <param name="id">ID do tipoDeUsuario que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.Post(senai.hroads.webApi.Domains.TiposDeUsuario)">
            <summary>
            Cadastra um novo tipoDeUsuario
            </summary>
            <param name="novoTipoDeUsuario">Objeto novoTipoDeUsuario que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposDeUsuariosController.Delete(System.Int32)">
            <summary>
            Deleta um tipoDeUsuario existente
            </summary>
            <param name="id">ID do tipoDeUsuario que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="P:senai.hroads.webApi.Controllers.TiposHabilidadesController._tipoHabilidadeRepository">
            <summary>
            Objeto _tipoHabilidadeRepository que irá receber todos os métodos definidos na interface ITipoHabilidadeRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.#ctor">
            <summary>
            Instancia o objeto _tipoHabilidadeRepository para que haja a referência nos métodos implementas no repositório TipoHabilidadeRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.Get">
            <summary>
            Lista todos os tiposHabilidades
            </summary>
            <returns>Uma lista de tiposHabilidades e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.Put(System.Int32,senai.hroads.webApi.Domains.TipoHabilidade)">
            <summary>
            Atualiza um tipoHabilidade existente
            </summary>
            <param name="id">ID do tipoHabilidade que será atualizado</param>
            <param name="tipoHabilidadeAtualizado">Objeto tipoHabilidadeAtualizado com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.GetById(System.Int32)">
            <summary>
            Busca um tipoHabilidade através do seu ID
            </summary>
            <param name="id">ID do tipoHabilidade que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.Post(senai.hroads.webApi.Domains.TipoHabilidade)">
            <summary>
            Cadastra um novo tipoHabilidade
            </summary>
            <param name="novoTipoHabilidade">Objeto novoTipoHabilidade que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.TiposHabilidadesController.Delete(System.Int32)">
            <summary>
            Deleta um tipoHabilidade existente
            </summary>
            <param name="id">ID do tipoHabilidade que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="P:senai.hroads.webApi.Controllers.UsuariosController._usuarioRepository">
            <summary>
            Objeto _usuarioRepository que irá receber todos os métodos definidos na interface IUsuarioRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.#ctor">
            <summary>
            Instancia o objeto _usuarioRepository para que haja a referência nos métodos implementadas no repositório UsuarioRepository
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.Get">
            <summary>
            Lista todos os usuarios
            </summary>
            <returns>Uma lista de usuarios e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.Put(System.Int32,senai.hroads.webApi.Domains.Usuario)">
            <summary>
            Atualiza um usuario existente
            </summary>
            <param name="id">ID do usuario que será atualizado</param>
            <param name="usuarioAtualizado">Objeto usuarioAtualizado com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.GetById(System.Int32)">
            <summary>
            Busca um usuario através do seu ID
            </summary>
            <param name="id">ID do usuario que será buscado</param>
            <returns>Um estúdio encontrado e um status code 200 - Ok</returns>
            http://localhost:5000/api/estudios/1
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.Post(senai.hroads.webApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.hroads.webApi.Controllers.UsuariosController.Delete(System.Int32)">
            <summary>
            Deleta um usuario existente
            </summary>
            <param name="id">ID do usuario que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IClasseRepository.Listar">
            <summary>
            Lista todas as classes
            </summary>
            <returns>Uma lista de classes</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IClasseRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma classe através do seu ID
            </summary>
            <param name="id">ID da classe que será buscada</param>
            <returns>Uma classe buscada</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IClasseRepository.Cadastrar(senai.hroads.webApi.Domains.Class)">
            <summary>
            Cadastra uma nova classe
            </summary>
            <param name="novaClasse">Objeto novoClasse que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IClasseRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.Class)">
            <summary>
            Atualiza uma classe existente
            </summary>
            <param name="id">ID da classe que será atualizada</param>
            <param name="classeAtualizada">Objeto classeAtualizada com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IClasseRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma classe existente
            </summary>
            <param name="id">ID da classe que será deletada</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.Listar">
            <summary>
            Lista todas as habilidades
            </summary>
            <returns>Uma lista de habilidades</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma habilidade através do seu ID
            </summary>
            <param name="id">ID da habilidade que será buscada</param>
            <returns>Uma habilidade buscada</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.Cadastrar(senai.hroads.webApi.Domains.Habilidade)">
            <summary>
            Cadastra uma nova habilidade
            </summary>
            <param name="novaHabilidade">Objeto novoHabilidade que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.Habilidade)">
            <summary>
            Atualiza uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será atualizada</param>
            <param name="habilidadeAtualizada">Objeto habilidadeAtualizada com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será deletada</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IHabilidadeRepository.ListarTiposHabilidades">
            <summary>
            Lista todas as habilidades com seus respectivos tipos
            </summary>
            <returns>Uma lista de habilidades com seus tipos</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IPersonagemRepository.Listar">
            <summary>
            Lista todos os personagems
            </summary>
            <returns>Uma lista de personagems</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IPersonagemRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um personagem através do seu ID
            </summary>
            <param name="id">ID do personagem que será buscado</param>
            <returns>Um personagem buscado</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IPersonagemRepository.Cadastrar(senai.hroads.webApi.Domains.Personagen)">
            <summary>
            Cadastra um novo personagem
            </summary>
            <param name="novoPersonagem">Objeto novoPersonagen que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IPersonagemRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.Personagen)">
            <summary>
            Atualiza um personagem existente
            </summary>
            <param name="id">ID do personagem que será atualizado</param>
            <param name="personagemAtualizado">Objeto personagenAtualizado com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IPersonagemRepository.Deletar(System.Int32)">
            <summary>
            Deleta um personagem existente
            </summary>
            <param name="id">ID do personagem que será deletado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoDeUsuarioRepository.Listar">
            <summary>
            Lista todos os tipossDeUsuarios
            </summary>
            <returns>Uma lista de tipossDeUsuarios</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoDeUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tiposDeUsuario através do seu ID
            </summary>
            <param name="id">ID do tiposDeUsuario que será buscado</param>
            <returns>Um tiposDeUsuario buscado</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoDeUsuarioRepository.Cadastrar(senai.hroads.webApi.Domains.TiposDeUsuario)">
            <summary>
            Cadastra um novo tiposDeUsuario
            </summary>
            <param name="novoTipoDeUsuario">Objeto novoTiposDeUsuario que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoDeUsuarioRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.TiposDeUsuario)">
            <summary>
            Atualiza um tiposDeUsuario existente
            </summary>
            <param name="id">ID do tiposDeUsuario que será atualizado</param>
            <param name="tipoDeUsuarioAtualizado">Objeto tiposDeUsuarioAtualizado com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoDeUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tiposDeUsuario existente
            </summary>
            <param name="id">ID do tiposDeUsuario que será deletado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoHabilidadeRepository.Listar">
            <summary>
            Lista todos os tiposHabilidades
            </summary>
            <returns>Uma lista de tiposHabilidades</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoHabilidadeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipoHabilidade através do seu ID
            </summary>
            <param name="id">ID do tipoHabilidade que será buscado</param>
            <returns>Um tipoHabilidade buscado</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoHabilidadeRepository.Cadastrar(senai.hroads.webApi.Domains.TipoHabilidade)">
            <summary>
            Cadastra um novo tipoHabilidade
            </summary>
            <param name="novoTipoHabilidade">Objeto novoTipoHabilidade que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoHabilidadeRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.TipoHabilidade)">
            <summary>
            Atualiza um tipoHabilidade existente
            </summary>
            <param name="id">ID do tipoHabilidade que será atualizado</param>
            <param name="tipoHabilidadeAtualizado">Objeto tipoHabilidadeAtualizado com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.ITipoHabilidadeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipoHabilidade existente
            </summary>
            <param name="id">ID do tipoHabilidade que será deletado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.Listar">
            <summary>
            Lista todos os usuarios
            </summary>
            <returns>Uma lista de usuarios</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuario através do seu ID
            </summary>
            <param name="id">ID do usuario que será buscado</param>
            <returns>Um usuario buscado</returns>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.Cadastrar(senai.hroads.webApi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.Atualizar(System.Int32,senai.hroads.webApi.Domains.Usuario)">
            <summary>
            Atualiza um usuario existente
            </summary>
            <param name="id">ID do usuario que será atualizado</param>
            <param name="usuarioAtualizado">Objeto usuarioAtualizado com as novas informações</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um usuario existente
            </summary>
            <param name="id">ID do usuario que será deletado</param>
        </member>
        <member name="M:senai.hroads.webApi.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo Usuario que foi buscado</returns>
        </member>
        <member name="F:senai.hroads.webApi.Repositories.ClasseRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="F:senai.hroads.webApi.Repositories.HabilidadeRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="F:senai.hroads.webApi.Repositories.PersonagemRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="F:senai.hroads.webApi.Repositories.TipoDeUsuarioRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="F:senai.hroads.webApi.Repositories.TipoHabilidadeRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:senai.hroads.webApi.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo Usuario que foi buscado</returns>
        </member>
    </members>
</doc>
